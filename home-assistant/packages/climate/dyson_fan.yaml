---
logbook:
  exclude:
    entities:
      - input_boolean.climate_dyson_fan_power
      - input_boolean.climate_dyson_fan_oscillating
      - input_number.climate_dyson_fan_speed
      - input_number.climate_dyson_fan_target_speed
      - script.climate_dyson_fan_send_command
      - script.climate_dyson_fan_toggle_state

input_boolean:
  climate_dyson_fan_oscillating:
    name: Climate - Dyson Fan - Oscillating
    icon: mdi:fan
  climate_dyson_fan_power:
    name: Climate - Dyson Fan - Power
    icon: mdi:fan

input_number:
  climate_dyson_fan_speed:
    name: Climate - Dyson Fan - Speed
    icon: mdi:fan
    min: 1
    max: 10
    step: 1
  climate_dyson_fan_target_speed:
    name: Climate - Dyson Fan - Target Speed
    icon: mdi:fan
    min: 1
    max: 10
    step: 1

script:
  climate_dyson_fan_send_command:
    alias: Climate - Dyson Fan - Send Command
    description:
      Sends a command to the Dyson Fan, particularly to manage atomicity.
    icon: mdi:fan
    mode: single
    sequence:
      - service: remote.send_command
        data:
          command: "{{ command }}"
          device: !secret harmony_climate_dyson_fan_device_id
        target:
          entity_id: remote.harmony
  climate_dyson_fan_correct_power:
    alias: Climate - Dyson Fan - Correct Power
    icon: mdi:fan-alert
    mode: single
    sequence:
      - wait_template: '{{ is_state("script.climate_dyson_fan_send_command", "off") }}'
      - service: script.climate_dyson_fan_send_command
        data:
          command: PowerToggle
  climate_dyson_fan_toggle_state:
    alias: Climate - Dyson Fan - Toggle State
    icon: mdi:fan
    mode: queued
    fields:
      command:
        description: |
          One of:
            - toggle_power
            - toggle_oscillate
            - sync_speed
    sequence:
      - if:
          - "{{ command is undefined }}"
        then:
          - stop: command was not specified
      - wait_template: '{{ is_state("script.climate_dyson_fan_send_command", "off") }}'
      - wait_template: '{{ is_state("script.climate_dyson_fan_correct_power", "off") }}'
      - variables:
          current_speed: '{{ states("input_number.climate_dyson_fan_speed") | int }}'
          target_speed:
            '{{ states("input_number.climate_dyson_fan_target_speed") | int }}'
      - choose:
          - conditions:
              - '{{ command == "toggle_power" }}'
            sequence:
              - service: script.climate_dyson_fan_send_command
                data:
                  command: PowerToggle
              - service: input_boolean.toggle
                target:
                  entity_id: input_boolean.climate_dyson_fan_power
          - conditions:
              - '{{ command == "toggle_oscillate" }}'
            sequence:
              - entity_id: input_boolean.climate_dyson_fan_power
                condition: state
                state: "on"
              - service: script.climate_dyson_fan_send_command
                data:
                  command: Oscillate
              - service: input_boolean.toggle
                target:
                  entity_id: input_boolean.climate_dyson_fan_oscillating
          - conditions:
              - '{{ command == "sync_speed" }}'
            sequence:
              - entity_id: input_boolean.climate_dyson_fan_power
                condition: state
                state: "on"
              - variables:
                  increase_speed: "{{ target_speed > current_speed }}"
              - condition: "{{ target_speed != current_speed }}"
              - service: script.climate_dyson_fan_send_command
                data:
                  command:
                    '{{ "FanModeUp" if increase_speed else "FanModeDown" }}'
              - service:
                  '{{ "input_number.increment" if increase_speed else
                  "input_number.decrement" }}'
                target:
                  entity_id: input_number.climate_dyson_fan_speed
      - if:
          - "{{ target_speed != current_speed }}"
          - condition: state
            entity_id: input_boolean.climate_dyson_fan_power
            state: "on"
        then:
          - service: script.turn_on
            data:
              variables:
                command: sync_speed
            target:
              entity_id: script.climate_dyson_fan_toggle_state
    max: 5

fan:
  - platform: template
    fans:
      climate_dyson_fan:
        unique_id: fan.climate_dyson_fan
        friendly_name: Dyson Fan
        value_template: |
          {{ states("input_boolean.climate_dyson_fan_power") }}
        oscillating_template: |
          {{ is_state("input_boolean.climate_dyson_fan_oscillating", "on") }}
        percentage_template: |
          {{ states("input_number.climate_dyson_fan_target_speed") | int * 10 }}
        turn_on:
          - entity_id: input_boolean.climate_dyson_fan_power
            condition: state
            state: "off"
          - service: script.climate_dyson_fan_toggle_state
            data:
              command: toggle_power
        turn_off:
          - entity_id: input_boolean.climate_dyson_fan_power
            condition: state
            state: "on"
          - service: script.climate_dyson_fan_toggle_state
            data:
              command: toggle_power
          - service: input_boolean.turn_off
            target:
              entity_id: input_boolean.climate_dyson_fan_oscillating
        set_oscillating:
          - condition: |
              {{ states("input_boolean.climate_dyson_fan_oscillating") != oscillating }}
          - service: script.climate_dyson_fan_toggle_state
            data:
              command: toggle_oscillate
        speed_count: 10
        set_percentage:
          - variables:
              target_speed: |
                {% set target_speed = (percentage | int / 10) | int %}
                {{ target_speed if target_speed != 0 else 1 }}
          - service: input_number.set_value
            data:
              value: "{{ target_speed }}"
            target:
              entity_id: input_number.climate_dyson_fan_target_speed
          - service: script.turn_on
            data:
              variables:
                command: sync_speed
            target:
              entity_id: script.climate_dyson_fan_toggle_state
