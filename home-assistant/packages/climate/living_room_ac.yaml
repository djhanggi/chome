---
homeassistant:
  customize:
    automation.living_room_ac_sync_state:
      icon: mdi:air-conditioner
    switch.living_room_ac:
      friendly_name: Living Room AC - Switch
      icon: mdi:air-conditioner

logbook:
  exclude:
    entities:
      - input_boolean.living_room_ac_power
      - input_number.living_room_ac_temperature
      - script.living_room_ac_send_command
      - script.living_room_ac_toggle_state
      - switch.living_room_ac

input_boolean:
  living_room_ac_power:
    name: Living Room AC - Power
    icon: mdi:air-conditioner

input_number:
  living_room_ac_temperature:
    name: Living Room AC - Temperature
    icon: mdi:thermometer
    min: 60
    max: 90
    step: 1

input_select:
  living_room_ac_mode:
    name: Living Room AC - Mode
    icon: mdi:air-conditioner
    options:
      - Cool
      - Money Saver
      - Fan Only

script:
  living_room_ac_correct_power:
    alias: Living Room AC - Correct Power
    icon: mdi:power
    mode: single
    sequence:
      - wait_template:
          '{{ is_state("script.living_room_ac_send_command", "off") }}'
      - service: script.living_room_ac_send_command
        data:
          command: toggle_power
  living_room_ac_send_command:
    alias: Living Room AC - Send Commmand
    description: |
      Sends a command to the Living Room AC, particularly to manage atomicity.
      Options include:
        * toggle_power
        * increase_temperature
        * decrease_temperature
        * set_cool_mode
        * set_money_saver_mode
        * set_fan_only_mode
        * toggle_fan_speed
    icon: mdi:air-conditioner
    mode: single
    sequence:
      - service: remote.send_command
        data:
          command: "{{ command }}"
          device: !secret harmony_friedrich_ac_device_id
        target:
          entity_id: remote.harmony
      # Delay to allow time for the AC to process the command.
      - delay:
          milliseconds: 750
  living_room_ac_toggle_state:
    alias: Living Room AC - Toggle State
    icon: mdi:air-conditioner
    mode: queued
    fields:
      command:
        description: |
          One of:
            - toggle_power
            - sync_temperature
            - sync_mode
    sequence:
      - if:
          - "{{ command is undefined }}"
        then:
          - stop: command was not specified
      - wait_template:
          '{{ is_state("script.living_room_ac_send_command", "off") }}'
      - wait_template:
          '{{ is_state("script.living_room_ac_correct_power", "off") }}'
      - variables:
          current_temperature:
            '{{ states("input_number.living_room_ac_temperature") | int }}'
          target_temperature:
            '{{ state_attr("climate.living_room_ac", "temperature") | int }}'
      - choose:
          - conditions: "{{ command == 'toggle_power' }}"
            sequence:
              - service: script.living_room_ac_send_command
                data:
                  command: PowerToggle
              - service: input_boolean.toggle
                target:
                  entity_id: input_boolean.living_room_ac_power
          - conditions: '{{ command == "sync_temperature" }}'
            sequence:
              - entity_id: input_boolean.living_room_ac_power
                condition: state
                state: "on"
              - entity_id: input_select.living_room_ac_mode
                condition: state
                state:
                  - Cool
                  - Money Saver
              - variables:
                  increase_temperature:
                    "{{ target_temperature > current_temperature }}"
              - condition: "{{ target_temperature != current_temperature }}"
              - service: script.living_room_ac_send_command
                data:
                  command:
                    '{{ "TempHotter" if increase_temperature else "TempCooler"
                    }}'
              - service:
                  '{{ "input_number.increment" if increase_temperature else
                  "input_number.decrement" }}'
                target:
                  entity_id: input_number.living_room_ac_temperature
      - if: '{{ command == "toggle_power" or command == "sync_mode" }}'
        then:
          - entity_id: input_boolean.living_room_ac_power
            condition: state
            state: "on"
          - service: script.living_room_ac_send_command
            data:
              command: |
                {% set MODES = {
                "Cool": "CoolMode",
                "Money Saver": "MoneySaverMode",
                "Fan Only": "FanMode",
                } %}
                {{ MODES[states("input_select.living_room_ac_mode")] | default("Cool")  }}
      - if:
          - "{{ target_temperature != current_temperature }}"
          - entity_id: input_boolean.living_room_ac_power
            condition: state
            state: "on"
          - entity_id: input_select.living_room_ac_mode
            condition: state
            state:
              - Cool
              - Money Saver
        then:
          - service: script.turn_on
            data:
              variables:
                command: sync_temperature
            target:
              entity_id: script.living_room_ac_toggle_state
    max: 5

automation:
  - id: living_room_ac_sync_state
    alias: Living Room AC - Sync State
    mode: queued
    trigger:
      - id: temperature
        entity_id: climate.living_room_ac
        platform: state
        attribute: temperature
      - id: mode
        entity_id: input_select.living_room_ac_mode
        platform: state
    condition:
      - entity_id: climate.living_room_ac
        condition: state
        state: cool
    action:
      - service: script.living_room_ac_toggle_state
        data:
          command: |
            {% if trigger.id == "temperature" %}
              sync_temperature
            {% elif trigger.id == "mode" %}
              sync_mode
            {% endif %}

switch:
  - platform: template
    switches:
      living_room_ac:
        turn_off:
          - entity_id: input_boolean.living_room_ac_power
            condition: state
            state: "on"
          - service: script.living_room_ac_toggle_state
            data:
              command: toggle_power
        turn_on:
          - entity_id: input_boolean.living_room_ac_power
            condition: state
            state: "off"
          - service: script.living_room_ac_toggle_state
            data:
              command: toggle_power
        value_template: |
          {{ is_state("input_boolean.living_room_ac_power", "on") }}

climate:
  - unique_id: living_room_ac
    name: Living Room AC
    platform: generic_thermostat
    ac_mode: true
    cold_tolerance: 1
    heater: switch.living_room_ac
    hot_tolerance: 1
    initial_hvac_mode: "off"
    max_temp: 90
    min_cycle_duration:
      minutes: 2
    min_temp: 60
    precision: 1
    target_sensor: sensor.sonoff_temperature_living_room_temperature
