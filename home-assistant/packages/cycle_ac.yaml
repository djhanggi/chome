---
homeassistant:
  customize:
    automation.cycle_ac:
      icon: mdi:timer
    automation.cycle_ac_shutoff:
      icon: mdi:timer
    automation.cycle_ac_restart:
      icon: mdi:timer
    automation.cycle_ac_disable_automation:
      icon: mdi:timer
    scene.cycle_ac:
      icon: mdi:air-conditioner

input_number:
  cycle_ac_shutoff_timer_duration:
    name: Cycle AC - Shut-Off Timer Duration
    step: 1
    min: 5
    max: 60
    mode: box
    unit_of_measurement: minutes
    icon: mdi:restart-off
  cycle_ac_restart_timer_duration:
    name: Cycle AC - Restart Timer Duration
    min: 5
    max: 60
    step: 1
    mode: box
    unit_of_measurement: minutes
    icon: mdi:restart

timer:
  cycle_ac_shutoff_timer:
    name: Cycle AC - Shut-Off Timer
    duration: "00:30:00"
    icon: mdi:air-conditioner
  cycle_ac_restart_timer:
    name: Cycle AC - Restart Timer
    duration: "00:30:00"
    icon: mdi:air-conditioner

automation:
  - id: cycle_ac
    alias: Cycle AC
    trigger:
      platform: state
      entity_id:
        - climate.living_room_ac
        - climate.bedroom_ac
      to: cool
    action:
      - service: scene.create
        data:
          scene_id: cycle_ac
          snapshot_entities:
            - climate.living_room_ac
            - climate.bedroom_ac
      - service: timer.start
        target:
          entity_id: timer.cycle_ac_shutoff_timer
        data_template:
          duration: >
            00:{{ states("input_number.cycle_ac_shutoff_timer_duration") |
            int}}:00
      - service: timer.cancel
        target:
          entity_id: timer.cycle_ac_restart_timer
  - id: cycle_ac_shutoff
    alias: Cycle AC - Shut-Off
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.cycle_ac_shutoff_timer
    action:
      - service: climate.turn_off
        target:
          entity_id:
            - climate.living_room_ac
            - climate.bedroom_ac
      - service: timer.start
        target:
          entity_id: timer.cycle_ac_restart_timer
        data_template:
          duration: >
            00:{{ states("input_number.cycle_ac_restart_timer_duration") | int
            }}:00
    mode: single
  - id: cycle_ac_restart
    alias: Cycle AC - Restart
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.cycle_ac_restart_timer
    action:
      - service: scene.turn_on
        target:
          entity_id: scene.cycle_ac
      - service: timer.start
        target:
          entity_id: timer.cycle_ac_shutoff_timer
        data_template:
          duration: >
            00:{{ states("input_number.cycle_ac_shutoff_timer_duration") |
            int}}:00
    mode: single
  - id: cycle_ac_disable_automation
    alias: Cycle AC - Disable Automation
    trigger:
      - platform: state
        entity_id: automation.cycle_ac
        from: "on"
        to: "off"
    action:
      - service: timer.cancel
        target:
          entity_id:
            - timer.cycle_ac_shutoff_timer
            - timer.cycle_ac_restart_timer
      - service: automation.trigger
        target:
          entity_id: automation.clear_scene_cycle_ac
    mode: single
  - id: clear_scene_cycle_ac
    alias: Clear scene.cycle_ac
    mode: single
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: scene.create
        data:
          scene_id: cycle_ac
          entities:
            automation.clear_scene_cycle_ac:
              state: "on"
  - id: change_cycle_ac_interval
    alias: Change Cycle AC Interval
    mode: single
    trigger:
      - platform: state
        entity_id: sensor.daytime_hours
    action:
      - if:
          - condition: state
            entity_id: sensor.daytime_hours
            state: "True"
        then:
          - service: scene.apply
            data:
              entities:
                input_number.cycle_ac_shutoff_timer_duration:
                  state: "30.0"
                input_number.cycle_ac_restart_timer_duration:
                  state: "30.0"
        else:
          - service: scene.create
            data:
              entities:
                input_number.cycle_ac_shutoff_timer_duration:
                  state: "10.0"
                input_number.cycle_ac_restart_timer_duration:
                  state: "30.0"
