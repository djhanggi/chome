script:
  scenes_sync_scene:
    alias: Sync Scene
    sequence:
      - service: scene.turn_on
        data_template:
          entity_id: >
            {% if is_state('input_boolean.at_home', 'on') %}
              {% if is_state('input_select.current_scene', 'Morning') %}
                scene.morning,
                scene.ajar_blinds
              {% elif is_state('input_select.current_scene', 'Daytime') %}
                scene.daytime,
                scene.open_blinds
              {% elif is_state('input_select.current_scene','Evening') %}
                scene.evening,
                scene.ajar_blinds
              {% elif is_state('input_select.current_scene', 'Night') %}
                scene.sleep,
                scene.closed_blinds
              {% endif %}
            {% else %}
              scene.away
            {% endif %}
    mode: restart

input_boolean:
  at_home:
    name: At Home
    initial: off
    icon: mdi:home

input_select:
  current_scene:
    name: Current Scene
    options:
      - Daytime
      - Morning
      - Evening
      - Sleep
    initial: Daytime
    icon: mdi:web-clock

input_datetime:
  morning_start_time:
    name: Morning Start Time
    has_time: true
    initial: '07:45'
    icon: mdi:weather-sunset-up
  evening_start_time:
    name: Evening Start Time
    has_time: true
    initial: '21:30'
    icon: mdi:weather-night
  sleep_start_time:
    name: Sleep Start Time
    has_time: true
    initial: '00:00'
    icon: mdi:bed

automation:
  - id: scenes_set_morning_start_time
    alias: Set Morning Start Time
    description: >
      Sets the Morning Start Time to the next sunrise.
    mode: single
    trigger:
      - platform: time
        at: '20:00:00'
    condition: []
    action:
      - service: input_datetime.set_datetime
        target:
          entity_id: input_datetime.morning_start_time
        data_template:
          time: >
            {{
              as_timestamp(states.sun.sun.attributes.next_rising) |
              timestamp_custom("%H:%M")
            }}
  - id: scenes_sync_scene
    alias: Sync Scene
    description: >
      Activates the appropriate scene when Current Scene or Present update.
    trigger:
    - platform: state
      entity_id: input_select.current_scene
    - platform: state
      entity_id: input_boolean.at_home
    condition: []
    action:
      - service: script.scenes_sync_scene
    mode: restart
  - id: scenes_set_morning
    alias: Morning
    description: Sets the Current Scene to Morning at sunrise.
    trigger:
    - platform: sun
      event: sunrise
      offset: '0'
    condition: []
    action:
    - service: input_select.select_option
      target:
        entity_id: input_select.current_scene
      data:
        option: Morning
    mode: single
  - id: scenes_set_evening
    alias: Sunset
    description: Sets the Current Scene to Evening at Evening Start Time.
    trigger:
    - platform: time
      at: input_datetime.evening_start_time
    condition: []
    action:
    - service: input_select.select_option
      target:
        entity_id: input_select.current_scene
      data:
        option: Evening
    mode: single
  - id: scenes_set_sleep
    alias: Sleep
    description: Sets the Current Scene to Sleep at Sleep Start Time.
    trigger:
      - platform: time
        at: input_datetime.sleep_start_time
    condition: []
    action:
    - service: input_select.select_option
      target:
        entity_id: input_select.current_scene
      data:
        option: Sleep
    mode: single
