---
homeassistant:
  customize:
    package.node_anchors:
      harmony_friedrich_ac_device: &HARMONY_FRIEDRICH_AC_DEVICE
        device: !secret harmony_friedrich_ac_device_id

script:
  living_room_ac_send_command:
    alias: "Living Room AC - Send Command"
    description: >
      Sends a command to the Living Room AC, particularly to manage atomicity.
    sequence:
      - service: remote.send_command
        target:
          entity_id: remote.harmony
        data_template:
          <<: *HARMONY_FRIEDRICH_AC_DEVICE
          command: "{{ command }}"
    mode: single
  living_room_ac_toggle_power:
    alias: "Living Room AC - Toggle Power"
    sequence:
      # Ensure that setting temperature is not currently running to guarantee
      # atomicity with that script.
      - wait_template: >
          {{ is_state("script.living_room_ac_toggle_temperature", "off") }}
      - service: script.living_room_ac_send_command
        data:
          command: PowerToggle
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.living_room_ac_power
      # Delay to allow time for the AC to process the command.
      - delay:
          milliseconds: 100
    mode: queued
    icon: mdi:fan
  living_room_ac_toggle_temperature:
    alias: "Living Room AC - Toggle Temperature"
    sequence:
      # Delay to allow time for any existing AC scripts to run and finish.
      - delay:
          milliseconds: 100
      # Fail if another AC command is running to guarantee atomicity.
      - condition: state
        entity_id: script.living_room_ac_send_command
        state: "off"
      - condition: state
        entity_id: input_boolean.living_room_ac_power
        state: "on"
      - service: script.living_room_ac_send_command
        data_template:
          command: >
            {% if increase_temperature %}
              TempHotter
            {% else %}
              TempCooler
            {% endif %}
      - service_template: >
          {% if increase_temperature %}
            input_number.increment
          {% else %}
            input_number.decrement
          {% endif %}
        target:
          entity_id: input_number.living_room_ac_temperature
    mode: single
    icon: mdi:thermometer
  living_room_ac_increase_temperature:
    alias: "Living Room AC - Increase Temperature"
    sequence:
      - service: script.living_room_ac_toggle_temperature
        data:
          increase_temperature: true
    mode: single
    icon: mdi:thermometer-plus
  living_room_ac_decrease_temperature:
    alias: "Living Room AC - Decrease Temperature"
    sequence:
      - service: script.living_room_ac_toggle_temperature
        data:
          increase_temperature: false
    mode: single
    icon: mdi:thermometer-minus
  living_room_ac_set_cool_mode:
    alias: "Living Room AC - Set Cool Mode"
    sequence:
      - service: script.living_room_ac_send_command
        data:
          command: CoolMode
    mode: single
    icon: mdi:coolant-temperature
  living_room_ac_set_fan_only_mode:
    alias: "Living Room AC - Set Fan-Only Mode"
    sequence:
      - service: script.living_room_ac_send_command
        data:
          command: FanMode
    mode: single
    icon: mdi:fan
  living_room_ac_set_money_saver_mode:
    alias: "Living Room AC - Set Money-Saver Mode"
    sequence:
      - service: script.living_room_ac_send_command
        data:
          command: MoneySaverMode
    mode: single
    icon: mdi:fan
  living_room_ac_toggle_fan_speed:
    alias: "Living Room AC - Toggle Fan Speed"
    sequence:
      - service: script.living_room_ac_send_command
        data:
          command: FanModeUp
    mode: single
    icon: mdi:fan-chevron-up

input_boolean:
  living_room_ac_power:
    name: Living Room AC - Power
    icon: mdi:air-conditioner
  living_room_ac_use_outside_temperature:
    name: Living Room AC - Use Outside Temperature
    initial: false
    icon: mdi:sun-thermometer-outline

input_number:
  living_room_ac_temperature:
    name: Living Room AC - Temperature
    min: 60.0
    max: 90.0
    step: 1.0
    icon: mdi:temperature

template:
  - sensor:
      - unique_id: living_room_ac_temperature_reference
        name: "Living Room AC - Temperature Reference"
        unit_of_measurement: "F"
        state: >
          {% if
          is_state("input_boolean.living_room_ac_use_outside_temperature",
          "on") %}
            {{ state_attr('weather.chome', 'temperature') }}
          {% else %}
            {{ states('sensor.bedroom_broadlink_temperature') }}
          {% endif %}

automation:
  - id: living_room_ac_set_temperature
    alias: "Living Room AC - Set Temperature"
    description: >
      Sets the AC temperature to the set point of climate.living_room_ac.
    trigger:
      - platform: state
        entity_id: climate.living_room_ac
        attribute: temperature
      - platform: state
        entity_id: input_boolean.living_room_ac_power
        to: "on"
    mode: single
    action:
      - repeat:
          while: >
            {{ is_state('input_boolean.living_room_ac_power', "on") and
              states('input_number.living_room_ac_temperature') | int !=
              state_attr('climate.living_room_ac', 'temperature') | int }}
          sequence:
            - service_template: >
                {% if states('input_number.living_room_ac_temperature') | int <
                state_attr('climate.living_room_ac', 'temperature') | int %}
                  script.living_room_ac_increase_temperature
                {% else %}
                  script.living_room_ac_decrease_temperature
                {% endif %}

switch:
  - platform: template
    switches:
      living_room_ac:
        value_template: >
          {{ is_state("input_boolean.living_room_ac_power", "on") }}
        turn_on:
          - condition: state
            entity_id: input_boolean.living_room_ac_power
            state: "off"
          - service: script.living_room_ac_toggle_power
        turn_off:
          - condition: state
            entity_id: input_boolean.living_room_ac_power
            state: "on"
          - service: script.living_room_ac_toggle_power

climate:
  - platform: generic_thermostat
    unique_id: living_room_ac
    name: Living Room AC
    heater: switch.living_room_ac
    target_sensor: sensor.living_room_ac_temperature_reference
    min_temp: 60
    max_temp: 90
    ac_mode: true
    cold_tolerance: 1.0
    hot_tolerance: 0
    min_cycle_duration:
      minutes: 2
    initial_hvac_mode: "off"
    precision: 1.0
