---
homeassistant:
  customize:
    group.djhanggi_presence:
      icon: mdi:home-map-marker
    automation.away:
      icon: mdi:location-exit
    automation.return:
      icon: mdi:location-enter
    scene.return:
      icon: mdi:location-enter

group:
  djhanggi_presence:
    name: DJHANGGI Presence
    entities:
      - person.djhanggi
      - sensor.scarif_at_home

template:
  - sensor:
      - unique_id: djhanggi_at_home
        name: DJHANGGI at Home
        state: >
          {% if is_state("sensor.scarif_wifi_connection", "CHOME.NYC") or
          is_state("sensor.scarif_wifi_connection", "CHOME") %}
            home
          {% else %}
            {{ states("person.djhanggi") }}
          {% endif %}

automation:
  - id: away
    alias: Away
    description: Turns off entities while away.
    mode: single
    trigger:
      - platform: state
        entity_id:
          - sensor.djhanggi_at_home
        from: home
        to: not_home
    action:
      - service: scene.create
        data:
          scene_id: return
          snapshot_entities:
            - light.ceiling_lights
            - light.hallway_lights
            - light.living_room_lamp
            - light.bathroom_lights
            - light.bedroom_lamp
            - light.bed
            - climate.living_room_ac
            - climate.bedroom_ac
            - fan.dyson_fan
            - fan.dyson_heater_fan
            - remote.harmony
            - automation.cycle_ac
      - service: scene.apply
        data:
          entities:
            group.lighting:
              state: "off"
            climate.living_room_ac:
              state: "off"
            climate.bedroom_ac:
              state: "off"
            fan.dyson_fan:
              state: "off"
            fan.dyson_heater_fan:
              state: "off"
            remote.harmony:
              state: "off"
            automation.cycle_ac:
              state: "off"
  - id: return
    alias: Return
    description: Turns on entities when returning.
    mode: single
    trigger:
      - platform: state
        entity_id:
          - sensor.djhanggi_at_home
        from: not_home
        to: home
    action:
      - service: scene.turn_on
        target:
          entity_id: scene.return
      - if:
          - condition: state
            entity_id: sensor.daytime_hours
            state: "False"
        then:
          - service: scene.turn_on
            target:
              entity_id: scene.evening
      - service: automation.trigger
        target:
          entity_id: automation.clear_scene_return
  - id: clear_scene_return
    alias: Clear scene.return
    mode: single
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: scene.create
        data:
          scene_id: return
          entities: {}
