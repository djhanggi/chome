---
homeassistant:
  customize:
    automation.shutoff_bedroom_ac:
      icon: mdi:timer
    automation.restart_bedroom_ac:
      icon: mdi:timer

timer:
  bedroom_ac_shutoff_timer_during_sleep:
    name: Bedroom AC Shut-Off Timer during Sleep
    duration: "00:30:00"
    icon: mdi:air-conditioner
  bedroom_ac_restart_timer_during_sleep:
    name: Bedroom AC Restart Timer during Sleep
    duration: "01:30:00"
    icon: mdi:air-conditioner

input_select:
  sleep_sound:
    name: Sleep Sound
    options:
      - Country
      - Rain
      - Rainforest
      - River
      - Thunderstorm
      - Waterfall
    initial: River

template:
  - sensor:
      - unique_id: sleep_sound_content_id
        name: Sleep Sound Content ID
        state: |
          {% set SOUNDS = {
              "Country":
          "https://storage.googleapis.com/relaxation-sounds/country_night_3600.mp3",
              "Rain":
          "https://storage.googleapis.com/relaxation-sounds/rain_3600.mp3",
              "Rainforest":
          "https://storage.googleapis.com/relaxation-sounds/rainforest_600.m4a",
              "River":
          "https://storage.googleapis.com/relaxation-sounds/river_3600.mp3",
              "Thunderstorm":
          "https://storage.googleapis.com/relaxation-sounds/thunderstorm_3600.mp3",
              "Waterfall":
          "https://storage.googleapis.com/relaxation-sounds/waterfall_600.m4a",
            } %}
          {% set state = states("input_select.sleep_sound") %}
          {{ SOUNDS[state] }}

script:
  play_bedroom_sleep_sound:
    alias: Play Bedroom Sleep Sound
    sequence:
      - service: media_player.volume_set
        target:
          entity_id: media_player.bedroom_speaker
        data:
          volume_level: 0.25
      - service: media_player.play_media
        target:
          entity_id: media_player.bedroom_speaker
        data_template:
          media_content_id: >
            {{ states("sensor.sleep_sound_content_id") }}
          media_content_type: music
    icon: mdi:bell-sleep
  go_to_sleep:
    alias: Go to Sleep
    sequence:
      - service: input_select.select_option
        target:
          entity_id: input_select.sleep_sound
        data_template:
          option: >
            {{ state_attr("input_select.sleep_sound", "options") | random }}
      - service: script.play_bedroom_sleep_sound
      - service: scene.turn_on
        target:
          entity_id: scene.chome_off
      - service: fan.turn_on
        target:
          entity_id: fan.dyson_heater_fan
      - service: climate.turn_on
        target:
          entity_id: climate.bedroom_ac
      - service: timer.start
        target:
          entity_id: timer.bedroom_ac_shutoff_timer_during_sleep
    icon: mdi:sleep

automation:
  - id: shutoff_bedroom_ac
    alias: Shut-Off Bedroom AC
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.bedroom_ac_shutoff_timer_during_sleep
    action:
      - service: climate.turn_off
        target:
          entity_id: climate.bedroom_ac
      - service: timer.start
        target:
          entity_id: timer.bedroom_ac_restart_timer_during_sleep
    mode: single
  - id: restart_bedroom_ac
    alias: Restart Bedroom AC
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.bedroom_ac_restart_timer_during_sleep
    condition:
      - condition: state
        entity_id: sensor.daytime_hours
        state: "False"
    action:
      - service: climate.turn_on
        target:
          entity_id: climate.bedroom_ac
      - if:
          - condition: state
            entity_id: sensor.daytime_hours
            state: "False"
        then:
          - service: timer.start
            target:
              entity_id: timer.bedroom_ac_shutoff_timer_during_sleep
    mode: single
